// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ParallaxScrollView component should render correctly 1`] = `
<View
  onLayout={[Function]}
  style={
    Array [
      undefined,
      Object {
        "backgroundColor": "transparent",
        "flex": 1,
      },
    ]
  }
>
  <View
    style={
      Object {
        "backgroundColor": "#000",
        "height": 100,
        "opacity": 1,
        "overflow": "hidden",
        "position": "absolute",
        "top": 0,
        "transform": Array [
          Object {
            "translateY": 0,
          },
          Object {
            "scale": 1,
          },
        ],
        "width": 750,
      }
    }
  >
    <View>
      <View />
    </View>
  </View>
  <RCTScrollView
    onChangeHeaderVisibility={[Function]}
    onScroll={[Function]}
    scrollEventThrottle={16}
    scrollingStickyheader={true}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
  >
    <View>
      <View
        style={
          Object {
            "backgroundColor": "transparent",
            "overflow": "hidden",
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "transparent",
              "height": 100,
              "opacity": 1,
              "overflow": "hidden",
            }
          }
        >
          <View
            style={
              Object {
                "height": 100,
              }
            }
          >
            <View />
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "#fff",
            },
          ]
        }
      >
        <View />
      </View>
      <View
        style={
          Object {
            "backgroundColor": "#fff",
          }
        }
      />
    </View>
  </RCTScrollView>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "top": 0,
        },
        Object {
          "width": 750,
        },
      ]
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "#000",
          "height": 0,
          "opacity": 0,
        }
      }
    >
      <View>
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={false}
          ellipsizeMode="tail"
        >
          Sticky Header
        </Text>
      </View>
    </View>
  </View>
</View>
`;
