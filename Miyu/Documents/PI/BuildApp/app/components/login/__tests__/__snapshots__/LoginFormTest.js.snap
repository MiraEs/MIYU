// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LoginForm should map dispatch to props 1`] = `
Object {
  "actions": Object {
    "getCustomer": [Function],
    "linkExistingCustomer": [Function],
    "loginWithCreds": [Function],
  },
}
`;

exports[`LoginForm should map state to props 1`] = `
Object {
  "isLoggingIn": true,
  "isLoggingInSocial": false,
  "user": Object {},
}
`;

exports[`LoginForm should render with full props 1`] = `
<View>
  <ScrollView
    accessibilityLabel={undefined}
    keyboardShouldPersistTaps="always"
    onScroll={[Function]}
    scrollsToTop={undefined}
    style={undefined}
  >
    <View
      style={
        Array [
          undefined,
          null,
        ]
      }
    >
      <Text
        style={
          Object {
            "marginTop": 8,
          }
        }
        weight="bold"
      >
        Email Address*
      </Text>
      <View
        style={null}
      >
        <View
          style={
            Array [
              Object {
                "borderColor": "#D0D3D4",
                "borderWidth": 1,
                "marginVertical": 8,
                "paddingHorizontal": 16,
              },
              "",
              "",
              Object {
                "backgroundColor": "#FFFFFF",
              },
              Object {},
            ]
          }
        >
          <TextInput
            accessibilityLabel="Email Address"
            accessible={true}
            autoCapitalize="none"
            autoCorrect={false}
            blurOnSubmit={false}
            hideErrorText={false}
            inlineLabel={false}
            isRequired={true}
            isRequiredError="Email Address is required."
            keyboardType="email-address"
            label="Email Address*"
            lines={1}
            multiline={false}
            name="emailAddress"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            onSubmitEditing={[Function]}
            placeholder=""
            returnKeyType="next"
            scrollToOnAndroid={false}
            scrollToOnFocus={false}
            secureTextEntry={false}
            style={
              Array [
                Object {
                  "color": "#63666A",
                  "fontFamily": "ProximaNova-Regular",
                  "fontSize": 16,
                  "lineHeight": 21,
                },
                Object {
                  "backgroundColor": "#FFFFFF",
                },
                Object {
                  "height": 44,
                },
                undefined,
                "",
              ]
            }
            textInputContainerStyle={Object {}}
            underlineColorAndroid="transparent"
            validateOnBlur={true}
            validateOnChange={false}
            validationFunction={[Function]}
            value=""
          />
        </View>
      </View>
    </View>
    <View
      style={
        Array [
          undefined,
          null,
        ]
      }
    >
      <Text
        style={
          Object {
            "marginTop": 8,
          }
        }
        weight="bold"
      >
        Password*
      </Text>
      <View
        style={null}
      >
        <View
          style={
            Array [
              Object {
                "borderColor": "#D0D3D4",
                "borderWidth": 1,
                "marginVertical": 8,
                "paddingHorizontal": 16,
              },
              "",
              "",
              Object {
                "backgroundColor": "#FFFFFF",
              },
              Object {},
            ]
          }
        >
          <TextInput
            accessibilityLabel="Password"
            accessible={true}
            autoCapitalize="none"
            autoCorrect={false}
            hideErrorText={false}
            inlineLabel={false}
            isRequired={true}
            isRequiredError="Password is required."
            keyboardType="default"
            label="Password*"
            lines={1}
            multiline={false}
            name="password"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            onSubmitEditing={[Function]}
            placeholder=""
            returnKeyType="go"
            scrollToOnAndroid={false}
            scrollToOnFocus={false}
            secureTextEntry={true}
            style={
              Array [
                Object {
                  "color": "#63666A",
                  "fontFamily": "ProximaNova-Regular",
                  "fontSize": 16,
                  "lineHeight": 21,
                },
                Object {
                  "backgroundColor": "#FFFFFF",
                },
                Object {
                  "height": 44,
                },
                undefined,
                "",
              ]
            }
            textInputContainerStyle={Object {}}
            underlineColorAndroid="transparent"
            validateOnBlur={true}
            validateOnChange={false}
            value={undefined}
          />
        </View>
      </View>
    </View>
    <Button
      accessibilityLabel="Login Button"
      color="primary"
      isLoading={false}
      onPress={[Function]}
      text="Login"
      trackAction="build:app:loginmodal:login"
    />
    <LinkButton
      accessibilityLabel="Forgot Password Button"
      onPress={[Function]}
      style={
        Object {
          "marginVertical": 16,
        }
      }
    >
      Forgot Password
    </LinkButton>
  </ScrollView>
</View>
`;
