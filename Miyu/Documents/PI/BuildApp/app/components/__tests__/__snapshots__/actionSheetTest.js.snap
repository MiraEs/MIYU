// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`actionSheet component should render ActionSheet with prop description 1`] = `
<View
  style={
    Object {
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <View
    style={
      Object {
        "backgroundColor": "rgba(0, 0, 0, 0.5)",
        "bottom": 0,
        "left": 0,
        "opacity": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "rgba(0, 0, 0, 0.5)",
          "bottom": 0,
          "left": 0,
          "opacity": 1,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    />
  </View>
  <View
    onLayout={[Function]}
    style={
      Object {
        "left": 0,
        "paddingTop": 24,
        "position": "absolute",
        "right": 0,
        "top": 588,
        "transform": Array [
          Object {
            "translateY": 0,
          },
        ],
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "paddingBottom": 0,
          },
          Object {
            "paddingTop": 16,
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "borderBottomColor": "#D0D3D4",
            "borderBottomWidth": 1,
            "flexDirection": "row",
            "justifyContent": "space-between",
            "paddingBottom": 16,
            "paddingHorizontal": 8,
          }
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "flex": 1,
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Text
            lineHeight={false}
          >
            Cancel
          </Text>
        </View>
        <View
          style={
            Object {
              "flex": 3,
            }
          }
        />
        <View
          style={
            Object {
              "flex": 1,
            }
          }
        />
      </View>
      <Text
        style={
          Object {
            "color": "#63666A",
            "fontFamily": "ProximaNova-Regular",
            "fontSize": 19,
            "lineHeight": 28,
            "marginBottom": 30,
            "textAlign": "center",
          }
        }
      >
        test
      </Text>
      <ListView
        dataSource={
          Object {
            "_data": Array [],
            "getRowCount": [Function],
          }
        }
        enableEmptySections={true}
        pageSize={30}
        renderRow={[Function]}
        scrollEnabled={false}
      />
    </View>
  </View>
</View>
`;

exports[`actionSheet component should render ActionSheet with prop icon 1`] = `
<View
  style={
    Object {
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <View
    style={
      Object {
        "backgroundColor": "rgba(0, 0, 0, 0.5)",
        "bottom": 0,
        "left": 0,
        "opacity": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "rgba(0, 0, 0, 0.5)",
          "bottom": 0,
          "left": 0,
          "opacity": 1,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    />
  </View>
  <View
    onLayout={[Function]}
    style={
      Object {
        "left": 0,
        "paddingTop": 24,
        "position": "absolute",
        "right": 0,
        "top": 588,
        "transform": Array [
          Object {
            "translateY": 0,
          },
        ],
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "paddingBottom": 0,
          },
          Object {},
          undefined,
        ]
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "borderBottomColor": "#D0D3D4",
            "borderBottomWidth": 1,
            "flexDirection": "row",
            "justifyContent": "space-between",
            "paddingBottom": 16,
            "paddingHorizontal": 8,
          }
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "flex": 1,
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Text
            lineHeight={false}
          >
            Cancel
          </Text>
        </View>
        <View
          style={
            Object {
              "flex": 3,
            }
          }
        />
        <View
          style={
            Object {
              "flex": 1,
            }
          }
        />
      </View>
      <ListView
        dataSource={
          Object {
            "_data": Array [],
            "getRowCount": [Function],
          }
        }
        enableEmptySections={true}
        pageSize={30}
        renderRow={[Function]}
        scrollEnabled={false}
      />
    </View>
    <View
      style={
        Object {
          "height": 40,
          "width": 40,
        }
      }
    >
      <Icon
        color="#fff"
        name="md-hammer"
        size={30}
      />
    </View>
  </View>
</View>
`;

exports[`actionSheet component should render ActionSheet with prop options 1`] = `
<View
  style={
    Object {
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <View
    style={
      Object {
        "backgroundColor": "rgba(0, 0, 0, 0.5)",
        "bottom": 0,
        "left": 0,
        "opacity": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "rgba(0, 0, 0, 0.5)",
          "bottom": 0,
          "left": 0,
          "opacity": 1,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    />
  </View>
  <View
    onLayout={[Function]}
    style={
      Object {
        "left": 0,
        "paddingTop": 24,
        "position": "absolute",
        "right": 0,
        "top": 588,
        "transform": Array [
          Object {
            "translateY": 0,
          },
        ],
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "paddingBottom": 0,
          },
          Object {},
          undefined,
        ]
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "borderBottomColor": "#D0D3D4",
            "borderBottomWidth": 1,
            "flexDirection": "row",
            "justifyContent": "space-between",
            "paddingBottom": 16,
            "paddingHorizontal": 8,
          }
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "flex": 1,
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Text
            lineHeight={false}
          >
            Cancel
          </Text>
        </View>
        <View
          style={
            Object {
              "flex": 3,
            }
          }
        />
        <View
          style={
            Object {
              "flex": 1,
            }
          }
        />
      </View>
      <ListView
        dataSource={
          Object {
            "_data": Array [],
            "getRowCount": [Function],
          }
        }
        enableEmptySections={true}
        pageSize={30}
        renderRow={[Function]}
        scrollEnabled={false}
      />
    </View>
  </View>
</View>
`;

exports[`actionSheet component should render ActionSheet with prop styleSheet 1`] = `
<View
  style={
    Object {
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <View
    style={
      Object {
        "backgroundColor": "rgba(0, 0, 0, 0.5)",
        "bottom": 0,
        "left": 0,
        "opacity": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "rgba(0, 0, 0, 0.5)",
          "bottom": 0,
          "left": 0,
          "opacity": 1,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    />
  </View>
  <View
    onLayout={[Function]}
    style={
      Object {
        "left": 0,
        "paddingTop": 24,
        "position": "absolute",
        "right": 0,
        "top": 588,
        "transform": Array [
          Object {
            "translateY": 0,
          },
        ],
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "paddingBottom": 0,
          },
          Object {},
          undefined,
        ]
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "borderBottomColor": "#D0D3D4",
            "borderBottomWidth": 1,
            "flexDirection": "row",
            "justifyContent": "space-between",
            "paddingBottom": 16,
            "paddingHorizontal": 8,
          }
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "flex": 1,
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Text
            lineHeight={false}
          >
            Cancel
          </Text>
        </View>
        <View
          style={
            Object {
              "flex": 3,
            }
          }
        />
        <View
          style={
            Object {
              "flex": 1,
            }
          }
        />
      </View>
      <ListView
        dataSource={
          Object {
            "_data": Array [],
            "getRowCount": [Function],
          }
        }
        enableEmptySections={true}
        pageSize={30}
        renderRow={[Function]}
        scrollEnabled={false}
      />
    </View>
  </View>
</View>
`;

exports[`actionSheet component should render ActionSheet with prop title 1`] = `
<View
  style={
    Object {
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <View
    style={
      Object {
        "backgroundColor": "rgba(0, 0, 0, 0.5)",
        "bottom": 0,
        "left": 0,
        "opacity": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "rgba(0, 0, 0, 0.5)",
          "bottom": 0,
          "left": 0,
          "opacity": 1,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    />
  </View>
  <View
    onLayout={[Function]}
    style={
      Object {
        "left": 0,
        "paddingTop": 24,
        "position": "absolute",
        "right": 0,
        "top": 588,
        "transform": Array [
          Object {
            "translateY": 0,
          },
        ],
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "paddingBottom": 0,
          },
          Object {
            "paddingTop": 16,
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "borderBottomColor": "#D0D3D4",
            "borderBottomWidth": 1,
            "flexDirection": "row",
            "justifyContent": "space-between",
            "paddingBottom": 16,
            "paddingHorizontal": 8,
          }
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "flex": 1,
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Text
            lineHeight={false}
          >
            Cancel
          </Text>
        </View>
        <View
          style={
            Object {
              "flex": 3,
            }
          }
        >
          <Text
            lineHeight={false}
            size="large"
            textAlign="center"
            weight="bold"
          >
            test
          </Text>
        </View>
        <View
          style={
            Object {
              "flex": 1,
            }
          }
        />
      </View>
      <ListView
        dataSource={
          Object {
            "_data": Array [],
            "getRowCount": [Function],
          }
        }
        enableEmptySections={true}
        pageSize={30}
        renderRow={[Function]}
        scrollEnabled={false}
      />
    </View>
  </View>
</View>
`;

exports[`actionSheet component should render ActionSheet with required props 1`] = `
<View
  style={
    Object {
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <View
    style={
      Object {
        "backgroundColor": "rgba(0, 0, 0, 0.5)",
        "bottom": 0,
        "left": 0,
        "opacity": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "rgba(0, 0, 0, 0.5)",
          "bottom": 0,
          "left": 0,
          "opacity": 1,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    />
  </View>
  <View
    onLayout={[Function]}
    style={
      Object {
        "left": 0,
        "paddingTop": 24,
        "position": "absolute",
        "right": 0,
        "top": 588,
        "transform": Array [
          Object {
            "translateY": 0,
          },
        ],
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "paddingBottom": 0,
          },
          Object {},
          undefined,
        ]
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "borderBottomColor": "#D0D3D4",
            "borderBottomWidth": 1,
            "flexDirection": "row",
            "justifyContent": "space-between",
            "paddingBottom": 16,
            "paddingHorizontal": 8,
          }
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "flex": 1,
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Text
            lineHeight={false}
          >
            Cancel
          </Text>
        </View>
        <View
          style={
            Object {
              "flex": 3,
            }
          }
        />
        <View
          style={
            Object {
              "flex": 1,
            }
          }
        />
      </View>
      <ListView
        dataSource={
          Object {
            "_data": Array [],
            "getRowCount": [Function],
          }
        }
        enableEmptySections={true}
        pageSize={30}
        renderRow={[Function]}
        scrollEnabled={false}
      />
    </View>
  </View>
</View>
`;
