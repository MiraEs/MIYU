// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The devOptionScreen should render the dev options 1`] = `
<ScrollView
  scrollsToTop={true}
  style={
    Object {
      "backgroundColor": "#FFFFFF",
      "flex": 1,
    }
  }
>
  <ListView
    dataSource={
      Object {
        "_data": Object {
          "CART": Array [
            Object {
              "onPress": [Function],
              "text": "Clear sessionCartId in local storage",
            },
          ],
          "CONTENT": Array [
            Object {
              "onPress": [Function],
              "text": "Deals Screen",
            },
            Object {
              "onPress": [Function],
              "text": "Shared Promo",
            },
          ],
          "MISC": Array [
            Object {
              "onPress": [Function],
              "text": "Modal",
            },
            Object {
              "onPress": [Function],
              "text": "Feature Switches",
            },
            Object {
              "onPress": [Function],
              "text": "Lookback",
            },
            Object {
              "onPress": [Function],
              "text": "Customer Impersonator",
            },
            Object {
              "onPress": [Function],
              "text": "Content",
            },
            Object {
              "onPress": [Function],
              "text": "Calendar Picker",
            },
            Object {
              "onPress": [Function],
              "text": "Clear Simple Store",
            },
            Object {
              "onPress": [Function],
              "text": "Save Redux Store to File",
            },
          ],
          "QUOTES": Array [
            Object {
              "onPress": [Function],
              "text": "Saved Cart Preview",
            },
          ],
          "SAMPLE PRODUCTS": Array [
            Object {
              "onPress": [Function],
              "text": "Product from uniqueId only",
            },
            Object {
              "onPress": [Function],
              "text": "MAP",
            },
            Object {
              "onPress": [Function],
              "text": "Drought Non-Compliant",
            },
            Object {
              "onPress": [Function],
              "text": "Low Lead Non-Compliant",
            },
            Object {
              "onPress": [Function],
              "text": "Flooring with Sq Ft",
            },
            Object {
              "onPress": [Function],
              "text": "Keying Priced Options",
            },
            Object {
              "onPress": [Function],
              "text": "Multiple Priced Options (2 with $$$), Keying Options",
            },
            Object {
              "onPress": [Function],
              "text": "Multiple Free Priced Options, Keying Options, Recommended Option",
            },
            Object {
              "onPress": [Function],
              "text": "Required Item",
            },
            Object {
              "onPress": [Function],
              "text": "Multiple Options for 1 Required Item",
            },
            Object {
              "onPress": [Function],
              "text": "Bundle",
            },
            Object {
              "onPress": [Function],
              "text": "Package",
            },
            Object {
              "onPress": [Function],
              "text": "GE Zipcode Functionality",
            },
            Object {
              "onPress": [Function],
              "text": "Not Low Lead Compliant with Replacement Item",
            },
            Object {
              "onPress": [Function],
              "text": "Has only may we suggest",
            },
            Object {
              "onPress": [Function],
              "text": "Has only configure accessory",
            },
            Object {
              "onPress": [Function],
              "text": "Has too much lead",
            },
            Object {
              "onPress": [Function],
              "text": "Has Accessories",
            },
            Object {
              "onPress": [Function],
              "text": "Discontinued",
            },
            Object {
              "onPress": [Function],
              "text": "Add To Cart Map Buster",
            },
            Object {
              "onPress": [Function],
              "text": "White Glove Delivery",
            },
            Object {
              "onPress": [Function],
              "text": "Product w/ Many Finishes",
            },
            Object {
              "onPress": [Function],
              "text": "CA non Drought compliant",
            },
            Object {
              "onPress": [Function],
              "text": "Appliance with services not available in some areas",
            },
            Object {
              "onPress": [Function],
              "text": "Crossed-out price, multi-select priced options, recommended product w/ long description",
            },
            Object {
              "onPress": [Function],
              "text": "Priced option, recommended product w/ long description, may we suggest page",
            },
            Object {
              "onPress": [Function],
              "text": "Fireplaces with a variety of priced options",
            },
            Object {
              "onPress": [Function],
              "text": "Required option, may we suggest page",
            },
            Object {
              "onPress": [Function],
              "text": "Keying option, required interior handle option",
            },
            Object {
              "onPress": [Function],
              "text": "Multiple recommended options",
            },
            Object {
              "onPress": [Function],
              "text": "Extreme case of many priced options",
            },
            Object {
              "onPress": [Function],
              "text": "Product with a Recommended AND Required product",
            },
          ],
        },
        "getRowCount": [Function],
      }
    }
    enableEmptySections={true}
    renderHeader={[Function]}
    renderRow={[Function]}
    renderSectionHeader={[Function]}
    scrollsToTop={true}
    style={
      Object {
        "backgroundColor": "#FFFFFF",
        "flex": 1,
      }
    }
  />
</ScrollView>
`;
