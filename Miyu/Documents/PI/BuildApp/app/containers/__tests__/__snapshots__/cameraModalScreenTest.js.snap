// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CameraModalScreen should render with default props 1`] = `
<View
  style={
    Object {
      "alignItems": "flex-end",
      "backgroundColor": "black",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <Camera
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
    type="back"
  />
  <View
    style={
      Object {
        "backgroundColor": "rgba(0, 0, 0, .1)",
        "bottom": 0,
        "height": 68,
        "left": 0,
        "position": "absolute",
        "right": 0,
      }
    }
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "left": 15,
          "opacity": 1,
          "position": "absolute",
          "top": 15,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <Icon
        color="white"
        name="ios-close"
        size={50}
        style={
          Object {
            "height": 50,
            "width": 50,
          }
        }
      />
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignSelf": "center",
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <Icon
        color="white"
        name="ios-radio-button-on"
        size={65}
        style={
          Object {
            "height": 65,
            "width": 65,
          }
        }
      />
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
          "position": "absolute",
          "right": 10,
          "top": 10,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <Icon
        color="white"
        name="ios-reverse-camera-outline"
        size={50}
        style={
          Object {
            "height": 50,
            "width": 50,
          }
        }
      />
    </View>
  </View>
</View>
`;
